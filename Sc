local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Sidhsksjsjsh/VAPE-UI-MODDED/main/.lua"))()
local wndw = lib:Window("VIP Turtle Hub V4 - powered by Turtle Team & Turtle Secure")
local T1 = wndw:Tab("Main")
local T2 = wndw:Tab("Inf Tower")

local workspace = game:GetService("Workspace")
local serverplayer = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local user = serverplayer.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local GC = getconnections or get_signal_cons
local VirtualUser = game:GetService("VirtualUser")
local LogService = game:GetService("LogService")
local HttpService = game:GetService("HttpService")
local a = "Turtle Hub"
local b = "ConfigSaver.lua"
local configsystem = {
Magnet = false,
ATP = false,
Attack = false,
Afk = false,

T1:Toggle("Magnet",configsystem.Magnet,function(value)
	_G.magnet = value
	configsystem.Magnet = value
	while wait() do
		if _G.magnet == false then break end
			while getgenv().Magnet do
            task.wait()
            getgenv().workspace = game:GetService("Workspace")
            getgenv().humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            getgenv().effects = workspace:FindFirstChild("Effects")
            if effects then
                for _, effect in ipairs(effects:GetChildren()) do
                    pcall(function()
                        effect.Base.CFrame = humanoidRootPart.CFrame
                    end)
                end
            end
    	end
	end)
end

T1:Toggle("Attack TP",configsystem.ATP,function(value)
	_G.atp = value
	configsystem.ATP = value
	while wait() do
		if _G.atp == false then break end
			while getgenv().ATP do
            pcall(function()
                local player = game.Players.LocalPlayer
                local currentWorld = player.World.Value
                local enemies = workspace.Worlds[currentWorld].Enemies:GetChildren()
                local playerPosition = player.Character.HumanoidRootPart.Position

                local sendPetRemote = game:GetService("ReplicatedStorage").Remote.SendPet
                local petList = game.Workspace.Pets:GetChildren()
                
                for _, enemy in ipairs(enemies) do
                    local enemyPosition = enemy.HumanoidRootPart.Position
                    local distance = (enemyPosition - playerPosition).Magnitude

                    if distance < 200 then
                        player.Character.HumanoidRootPart.CFrame = enemy.PrimaryPart.CFrame
                        local contador = 1
                        print('SENDING PETS TO ATTACK...')

                        for _, pet in ipairs(petList) do
                            task.wait()
                            if pet:IsA("Model") and pet:FindFirstChild("Data") and tostring(pet.Data.Owner.Value) == player.Name then
                                local args = {
                                    [1] = pet,
                                    [2] = enemy,
                                    [3] = contador
                                }
                                sendPetRemote:FireServer(unpack(args))
                                pet.Data.Attacking.Value = args[2]
                                contador = contador + 1
                            end
                        end
                    end
                    task.wait()
                end
            end)
        end
    end)
end

T1:Toggle("Attack",configsystem.Attack,function(value)
	_G.atk = value
	configsystem.Attack = value
	while wait() do
		if _G.atk == false then break end
			while getgenv().Attack do
            local player = game:GetService("Players").LocalPlayer
            local currentWorld = player.World.Value
            local playerPosition = player.Character.HumanoidRootPart.Position
            
            local equippedPets = {}
            for _, pet in ipairs(game:GetService("Workspace").Pets:GetChildren()) do
                task.wait()
                if pet:IsA("Model") and pet:FindFirstChild("Data") and tostring(pet.Data.Owner.Value) == player.Name then
                    table.insert(equippedPets, pet)
                end
            end

            local nearestEnemy = workspace.Worlds[currentWorld].Enemies:GetChildren()[1]
            if nearestEnemy then
                local enemyPosition = nearestEnemy.HumanoidRootPart.Position
                local distance = (enemyPosition - playerPosition).Magnitude
                if distance < 200 then
                    player.Character.HumanoidRootPart.CFrame = nearestEnemy.PrimaryPart.CFrame 
                    local contador = 1
                    print('SENDING PETS TO ATTACK...')

                    for _, pet in ipairs(equippedPets) do
                        local args = {
                            [1] = pet,
                            [2] = nearestEnemy,
                            [3] = contador
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("SendPet"):FireServer(unpack(args))
                        pet.Data.Attacking.Value = args[2]
                        contador = contador + 1
                    end
                end
            end
        end
    end)
end

T1:Toggle("Afk",configsystem.Afk,function(value)
	_G.affk = value
	configsystem.Afk = value
	while wait() do
		if _G.afk == false then break end
			while getgenv().Afk do
			task.wait()
			for i,v in pairs(getconnections(player.Idled)) do
				v:Disable()
				task.wait()
			end
        end
    end)
end
